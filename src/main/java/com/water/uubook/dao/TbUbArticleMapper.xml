<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.water.uubook.dao.TbUbArticleMapper">
  <resultMap id="BaseResultMap" type="com.water.uubook.model.TbUbArticle">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="reference" property="reference" jdbcType="VARCHAR" />
    <result column="descrypt_url" property="descryptUrl" jdbcType="VARCHAR" />
    <result column="release_time" property="releaseTime" jdbcType="VARCHAR" />
    <result column="create_on" property="createOn" jdbcType="BIGINT" />
    <result column="module" property="module" jdbcType="INTEGER" />
    <result column="origin" property="origin" jdbcType="INTEGER" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="view_hits" property="viewHits" jdbcType="INTEGER" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.water.uubook.model.TbUbArticle" extends="BaseResultMap">
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, description, author, category, reference, descrypt_url, release_time, 
    create_on, module, origin, tags, view_hits, pic_url, enable
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
          parameterType="com.water.uubook.model.TbUbArticleCriteria">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_ub_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.water.uubook.model.TbUbArticleCriteria">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_ub_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_ub_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_ub_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.water.uubook.model.TbUbArticleCriteria">
    delete from tb_ub_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.water.uubook.model.TbUbArticle">
    insert into tb_ub_article (id, title, description, 
      author, category, reference, 
      descrypt_url, release_time, create_on, 
      module, origin, tags, 
      view_hits, pic_url, enable, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, #{reference,jdbcType=VARCHAR}, 
      #{descryptUrl,jdbcType=VARCHAR}, #{releaseTime,jdbcType=VARCHAR}, #{createOn,jdbcType=BIGINT}, 
      #{module,jdbcType=INTEGER}, #{origin,jdbcType=INTEGER}, #{tags,jdbcType=VARCHAR}, 
      #{viewHits,jdbcType=INTEGER}, #{picUrl,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.water.uubook.model.TbUbArticle">
    insert into tb_ub_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="reference != null" >
        reference,
      </if>
      <if test="descryptUrl != null" >
        descrypt_url,
      </if>
      <if test="releaseTime != null" >
        release_time,
      </if>
      <if test="createOn != null" >
        create_on,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      <if test="viewHits != null" >
        view_hits,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="reference != null" >
        #{reference,jdbcType=VARCHAR},
      </if>
      <if test="descryptUrl != null" >
        #{descryptUrl,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null" >
        #{releaseTime,jdbcType=VARCHAR},
      </if>
      <if test="createOn != null" >
        #{createOn,jdbcType=BIGINT},
      </if>
      <if test="module != null" >
        #{module,jdbcType=INTEGER},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=INTEGER},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="viewHits != null" >
        #{viewHits,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.water.uubook.model.TbUbArticleCriteria" resultType="java.lang.Integer">
    select count(*) from tb_ub_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_ub_article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.reference != null" >
        reference = #{record.reference,jdbcType=VARCHAR},
      </if>
      <if test="record.descryptUrl != null" >
        descrypt_url = #{record.descryptUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseTime != null" >
        release_time = #{record.releaseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.createOn != null" >
        create_on = #{record.createOn,jdbcType=BIGINT},
      </if>
      <if test="record.module != null" >
        module = #{record.module,jdbcType=INTEGER},
      </if>
      <if test="record.origin != null" >
        origin = #{record.origin,jdbcType=INTEGER},
      </if>
      <if test="record.tags != null" >
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.viewHits != null" >
        view_hits = #{record.viewHits,jdbcType=INTEGER},
      </if>
      <if test="record.picUrl != null" >
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tb_ub_article
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      reference = #{record.reference,jdbcType=VARCHAR},
      descrypt_url = #{record.descryptUrl,jdbcType=VARCHAR},
      release_time = #{record.releaseTime,jdbcType=VARCHAR},
      create_on = #{record.createOn,jdbcType=BIGINT},
      module = #{record.module,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      view_hits = #{record.viewHits,jdbcType=INTEGER},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_ub_article
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      reference = #{record.reference,jdbcType=VARCHAR},
      descrypt_url = #{record.descryptUrl,jdbcType=VARCHAR},
      release_time = #{record.releaseTime,jdbcType=VARCHAR},
      create_on = #{record.createOn,jdbcType=BIGINT},
      module = #{record.module,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      view_hits = #{record.viewHits,jdbcType=INTEGER},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      enable = #{record.enable,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.water.uubook.model.TbUbArticle">
    update tb_ub_article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="reference != null" >
        reference = #{reference,jdbcType=VARCHAR},
      </if>
      <if test="descryptUrl != null" >
        descrypt_url = #{descryptUrl,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null" >
        release_time = #{releaseTime,jdbcType=VARCHAR},
      </if>
      <if test="createOn != null" >
        create_on = #{createOn,jdbcType=BIGINT},
      </if>
      <if test="module != null" >
        module = #{module,jdbcType=INTEGER},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=INTEGER},
      </if>
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="viewHits != null" >
        view_hits = #{viewHits,jdbcType=INTEGER},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.water.uubook.model.TbUbArticle">
    update tb_ub_article
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      reference = #{reference,jdbcType=VARCHAR},
      descrypt_url = #{descryptUrl,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=VARCHAR},
      create_on = #{createOn,jdbcType=BIGINT},
      module = #{module,jdbcType=INTEGER},
      origin = #{origin,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      view_hits = #{viewHits,jdbcType=INTEGER},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.water.uubook.model.TbUbArticle">
    update tb_ub_article
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      reference = #{reference,jdbcType=VARCHAR},
      descrypt_url = #{descryptUrl,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=VARCHAR},
      create_on = #{createOn,jdbcType=BIGINT},
      module = #{module,jdbcType=INTEGER},
      origin = #{origin,jdbcType=INTEGER},
      tags = #{tags,jdbcType=VARCHAR},
      view_hits = #{viewHits,jdbcType=INTEGER},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.water.uubook.model.TbUbArticleCriteria"
          id="selectByExampleWithBLOBsWithRowbounds">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_ub_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.water.uubook.model.TbUbArticleCriteria"
          id="selectByExampleWithRowbounds">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_ub_article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insertBatch" >
    insert into tb_ub_article (id, title, description, author, category, reference, descrypt_url, release_time,
    create_on, module, origin, tags, view_hits, pic_url, enable, content) values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.id,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, 
        #{item.author,jdbcType=VARCHAR}, #{item.category,jdbcType=INTEGER}, #{item.reference,jdbcType=VARCHAR}, 
        #{item.descryptUrl,jdbcType=VARCHAR}, #{item.releaseTime,jdbcType=VARCHAR}, #{item.createOn,jdbcType=BIGINT}, 
        #{item.module,jdbcType=INTEGER}, #{item.origin,jdbcType=INTEGER}, #{item.tags,jdbcType=VARCHAR}, 
        #{item.viewHits,jdbcType=INTEGER}, #{item.picUrl,jdbcType=VARCHAR}, #{item.enable,jdbcType=BIT}, 
        #{item.content,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
</mapper>